name: .NET Core Desktop Windows Builder

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    
    runs-on: [ubuntu-latest]  # For a list of available runner types, refer to                           
     # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: BilibiliSubtitle2SRT.sln                                    # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path:  BilibiliSubtitle2SRT/BilibiliSubtitle2SRT.csproj       # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Wap_Project_Directory: BilibiliSubtitle2SRT/BilibiliSubtitle2SRT.csproj    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: BilibiliSubtitle2SRT/BilibiliSubtitle2SRT.csproj         # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    
    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 4.7.x

    - uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NuGetAPIKey }}
        nuget-version: '4.x'
    - run: nuget restore BilibiliSubtitle2SRT.sln 

    - run: dotnet restore BilibiliSubtitle2SRT.sln 

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    #- name: Setup MSBuild.exe
     # uses: microsoft/setup-msbuild@v1.1.3
      #with:
       #  vs-prerelease: true
   
    # Execute all unit tests in the solution
    - name: Build
      run: dotnet build BilibiliSubtitle2SRT/BilibiliSubtitle2SRT.csproj  --configuration Release --no-restore

    - name: Listing
      run: ls
  
    - name: listing binary
      run: ls bin
  
    
        
  
    - name: List dir
      run: pwd
    
    - name: List File
      run: ls

    - name: Upload release asset
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ secrets.VERSION_WIN }}"
          prerelease: false
          title: "Release Build"
          files: |
                *.zip
                LICENSE
